# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macOS-latest
    strategy:
      matrix:
        r-version: [3.5]

    steps:
      - run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@ffe45a39586f073cc2e9af79c4ba563b657dc6e3
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install gapminder
        run: install.packages("gapminder")
        shell: Rscript {0}
      - name: copy files
        run: cp R_checker.R /R_checker.R
# need to call the Rchecker file but i am not sure how to do that!
#need to also copy the data over.  that should probably happen in unix commands
# Copies your code file from your action repository to the filesystem path `/` of the container
##COPY entrypoint.sh /entrypoint.sh
# Code file to execute when the docker container starts up (`entrypoint.sh`)
##ENTRYPOINT ["/entrypoint.sh"]        
#      - name: Install dependencies
#        run: install.packages(c("remotes","rcmdcheck"))
#        run: |
#          install.packages(c("remotes", "rcmdcheck"))
#          remotes::install_deps(dependencies = TRUE)
#        shell: Rscript {0}
#      - name: Check
#        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
#        shell: Rscript {0}
